# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle and Container Deployment

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'oracle'
      - name: Run tests
        run: ./gradlew test

  lint:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'oracle'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@ec92e829475ac0c2315ea8f9eced72db85bb337a # v3.0.0
        with:
          gradle-version: '8.5'

      - name: Grant execute permission to gradlew
        run: chmod +x ./gradlew
        
      - name: Checkstyle lint
        run: |
          ./gradlew checkstyleMain
          ./gradlew checkstyleTest
      - name: Hadolint lint
        run: |
          curl -sL https://github.com/hadolint/hadolint/releases/latest/download/hadolint-Linux-x86_64 > hadolint
          chmod +x hadolint
          ./hadolint Dockerfile

  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'oracle'

      # Hier sollten Sie den Setup-Gradle-Schritt hinzuf√ºgen
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@ec92e829475ac0c2315ea8f9eced72db85bb337a # v3.0.0
        with:
          gradle-version: '8.5'

      - name: Grant execute permission to gradlew
        run: chmod +x gradlew

      - name: Build with Gradle 
        run: ./gradlew build
      # Assuming the build process takes 1 hour
      # This is just an example timeout, adjust as needed
        timeout-minutes: 60

  container:
   runs-on: ubuntu-latest
   needs: build
   permissions:
    packages: write
    contents: read
   steps:
     - uses: actions/checkout@v4
     - name: Log in to the Container registry
       uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
       with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
     - name: Extract metadata (tags, labels) for Docker
       id: meta
       uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
       with:
          images: ghcr.io/${{ github.repository }}
     - name: Build and push Docker image
       uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
       with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

# Enforce branch protection rules
  enable-branch-protection:
    runs-on: ubuntu-latest
    needs: [test, lint, build, container]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push' && success()
    steps:
      - name: Install GitHub CLI
        run: |
          wget https://github.com/cli/cli/releases/download/v2.5.0/gh_2.5.0_linux_amd64.deb
          sudo dpkg -i gh_2.5.0_linux_amd64.deb
          sudo apt-get install -f
      - name: Enable branch protection
        run: |
          curl -X PUT \
          -H "Accept: application/vnd.github.luke-cage-preview+json" \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -d '{"required_status_checks":{"strict":true,"contexts":["test","lint","build","container"]}}' \
          "https://api.github.com/repos/${{ github.repository }}/branches/main/protection"
          
    # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
    # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
    #
    # - name: Setup Gradle
    #   uses: gradle/actions/setup-gradle@ec92e829475ac0c2315ea8f9eced72db85bb337a # v3.0.0
    #   with:
    #     gradle-version: '8.5'
    #
    # - name: Build with Gradle 8.5
    #   run: gradle build
